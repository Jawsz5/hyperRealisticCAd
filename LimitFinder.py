## modules needed
import numpy as np #numeric python
import matplotlib.pyplot as plt #graphing things with matlab
import scipy.integrate as sci #integrating things
import networkx as nx #creates the resevoir

# Create a directed graph
G = nx.DiGraph()

# Add nodes for major components
components = ["Thrust", "Mass", "Nozzle", "Frame Material", "Fuel", "Fins", "Altitude", "Velocity", "Delta-V", "Orbit"]
G.add_nodes_from(components)

# Add edges to represent relationships
edges = [("Thrust", "Delta-V", 0.5),  # Example weight for the strength of the relationship
         ("Mass", "Delta-V", 0.8),    # Example weight for the strength of the relationship
         ("Nozzle", "Thrust", 0.7),   # Example weight for the strength of the relationship
         ("Frame Material", "Mass", 0.6),  # Example weight for the strength of the relationship
         ("Fuel", "Mass", 0.4),           # Example weight for the strength of the relationship
         ("Fins", "Aerodynamics", 0.3),   # Example weight for the strength of the relationship
         ("Altitude", "Gravity", 0.9),    # Example weight for the strength of the relationship
         ("Velocity", "Delta-V", 0.6),    # Example weight for the strength of the relationship
         ("Delta-V", "Orbit", 0.8)]       # Example weight for the strength of the relationship

# Add more edges representing relationships between other components
# You should derive the weights from the equations and logic in the Rocket class

G.add_weighted_edges_from(edges)

# Plot the graph
pos = nx.spring_layout(G)
nx.draw(G, pos, with_labels=True, node_size=3000, node_color="skyblue", font_size=10, font_weight="bold")
nx.draw_networkx_edge_labels(G, pos, edge_labels={(u, v): f"{d['weight']}" for u, v, d in G.edges(data=True)})
plt.title("Rocket Reservoir")
plt.show()


'''
Thrust to Delta-V:
Interaction: Higher thrust leads to greater change in velocity (Delta-V) over time.
Quantification: Normalize the ratio of thrust to mass to a range between 0 and 1.
Test and Validate: Compare calculated dependency strength with expected change in velocity for different thrust-to-mass ratios.

Mass to Delta-V:
Interaction: Greater mass results in lower change in velocity (Delta-V) for the same thrust.
Quantification: Normalize the mass to a range between 0 and 1.
Test and Validate: Compare calculated dependency strength with expected change in velocity for different mass values.

Nozzle to Thrust:
Interaction: The design and efficiency of the nozzle affect the thrust generated by the engine.
Quantification: Derive a function based on nozzle characteristics that quantifies its impact on thrust.
Test and Validate: Compare calculated dependency strength with expected thrust values for different nozzle designs.

Frame Material to Mass:
Interaction: The choice of frame material affects the overall mass of the rocket.
Quantification: Derive a function that relates the density and strength of the material to its contribution to mass.
Test and Validate: Compare calculated dependency strength with expected mass values for different frame materials.

Fuel to Mass:
Interaction: The amount of fuel onboard contributes to the total mass of the rocket.
Quantification: Normalize the fuel mass to a range between 0 and 1.
Test and Validate: Compare calculated dependency strength with expected mass values for different fuel loads.

Fins to Aerodynamics:
Interaction: The presence and design of fins affect the aerodynamic properties of the rocket.
Quantification: Derive a function based on fin geometry and placement that quantifies their impact on aerodynamics.
Test and Validate: Compare calculated dependency strength with expected aerodynamic performance for different fin configurations.

Altitude to Gravity:
Interaction: Gravity varies with altitude, affecting the acceleration of the rocket.
Quantification: Normalize the gravitational force at different altitudes to a range between 0 and 1.
Test and Validate: Compare calculated dependency strength with expected gravitational forces at different altitudes.

Velocity to Delta-V:
Interaction: The rocket's velocity affects its ability to change velocity (Delta-V) over time.
Quantification: Derive a function based on the rocket's velocity profile that quantifies its impact on Delta-V.
Test and Validate: Compare calculated dependency strength with expected changes in Delta-V for different velocity profiles.

Delta-V to Orbit:
Interaction: The total change in velocity (Delta-V) determines whether the rocket can achieve orbit.
Quantification: Normalize the total Delta-V required for orbit to a range between 0 and 1.
Test and Validate: Compare calculated dependency strength with known Delta-V requirements for achieving orbit.
'''